// <auto-generated />
using System;
using BonsaiServer.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BonsaiServer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190221165952_Seed")]
    partial class Seed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BonsaiServer.Database.Mutation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("End");

                    b.Property<int>("Plant1Id");

                    b.Property<int>("Plant2Id");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("Plant1Id");

                    b.HasIndex("Plant2Id");

                    b.HasIndex("UserId");

                    b.ToTable("Mutations");
                });

            modelBuilder.Entity("BonsaiServer.Database.Plant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FlowersColorString")
                        .HasColumnName("FlowersColor")
                        .HasMaxLength(3);

                    b.Property<byte>("FlowersId");

                    b.Property<string>("LeavesColorString")
                        .HasColumnName("LeavesColor")
                        .HasMaxLength(3);

                    b.Property<byte>("LeavesId");

                    b.Property<string>("Name")
                        .HasMaxLength(20);

                    b.Property<string>("PotColorString")
                        .HasColumnName("PotColor")
                        .HasMaxLength(3);

                    b.Property<byte>("Rarity");

                    b.Property<byte>("Slot");

                    b.Property<string>("SoilColorString")
                        .HasColumnName("SoilColor")
                        .HasMaxLength(3);

                    b.Property<string>("StalkColorString")
                        .HasColumnName("StalkColor")
                        .HasMaxLength(3);

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Plants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FlowersColorString = "175",
                            FlowersId = (byte)1,
                            LeavesColorString = "3b1",
                            LeavesId = (byte)1,
                            Name = "NOBYEMCSC",
                            PotColorString = "379",
                            Rarity = (byte)0,
                            Slot = (byte)0,
                            SoilColorString = "d57",
                            StalkColorString = "915",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            FlowersColorString = "55b",
                            FlowersId = (byte)1,
                            LeavesColorString = "35f",
                            LeavesId = (byte)1,
                            Name = "GYRAI",
                            PotColorString = "53f",
                            Rarity = (byte)3,
                            Slot = (byte)0,
                            SoilColorString = "d91",
                            StalkColorString = "171",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            FlowersColorString = "9b7",
                            FlowersId = (byte)1,
                            LeavesColorString = "931",
                            LeavesId = (byte)1,
                            Name = "DPVZUPHKKIK",
                            PotColorString = "d51",
                            Rarity = (byte)5,
                            Slot = (byte)0,
                            SoilColorString = "711",
                            StalkColorString = "155",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            FlowersColorString = "f5b",
                            FlowersId = (byte)1,
                            LeavesColorString = "bb3",
                            LeavesId = (byte)1,
                            Name = "FCLSNKPSUN",
                            PotColorString = "db1",
                            Rarity = (byte)2,
                            Slot = (byte)0,
                            SoilColorString = "335",
                            StalkColorString = "ff7",
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            FlowersColorString = "935",
                            FlowersId = (byte)1,
                            LeavesColorString = "5fd",
                            LeavesId = (byte)1,
                            Name = "JEBQQAZEN",
                            PotColorString = "f17",
                            Rarity = (byte)2,
                            Slot = (byte)0,
                            SoilColorString = "b71",
                            StalkColorString = "559",
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            FlowersColorString = "1d9",
                            FlowersId = (byte)1,
                            LeavesColorString = "b95",
                            LeavesId = (byte)1,
                            Name = "XOOZF",
                            PotColorString = "375",
                            Rarity = (byte)0,
                            Slot = (byte)0,
                            SoilColorString = "93b",
                            StalkColorString = "791",
                            UserId = 2
                        },
                        new
                        {
                            Id = 7,
                            FlowersColorString = "3b7",
                            FlowersId = (byte)1,
                            LeavesColorString = "193",
                            LeavesId = (byte)1,
                            Name = "YGQOVCINAP",
                            PotColorString = "1d7",
                            Rarity = (byte)4,
                            Slot = (byte)0,
                            SoilColorString = "b1d",
                            StalkColorString = "fbd",
                            UserId = 2
                        },
                        new
                        {
                            Id = 8,
                            FlowersColorString = "1fb",
                            FlowersId = (byte)1,
                            LeavesColorString = "df3",
                            LeavesId = (byte)1,
                            Name = "LHLQFQAM",
                            PotColorString = "37d",
                            Rarity = (byte)3,
                            Slot = (byte)0,
                            SoilColorString = "f71",
                            StalkColorString = "b17",
                            UserId = 2
                        },
                        new
                        {
                            Id = 9,
                            FlowersColorString = "fbd",
                            FlowersId = (byte)1,
                            LeavesColorString = "99b",
                            LeavesId = (byte)1,
                            Name = "TYQKKEXSHO",
                            PotColorString = "ddd",
                            Rarity = (byte)3,
                            Slot = (byte)0,
                            SoilColorString = "9d1",
                            StalkColorString = "b79",
                            UserId = 2
                        },
                        new
                        {
                            Id = 10,
                            FlowersColorString = "7b5",
                            FlowersId = (byte)1,
                            LeavesColorString = "95f",
                            LeavesId = (byte)1,
                            Name = "THOQLEYUGWN",
                            PotColorString = "f71",
                            Rarity = (byte)4,
                            Slot = (byte)0,
                            SoilColorString = "ff1",
                            StalkColorString = "515",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("BonsaiServer.Database.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasMaxLength(32);

                    b.Property<string>("Login")
                        .HasMaxLength(16);

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(64);

                    b.Property<string>("Session")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "abc@wp.pl",
                            Login = "a",
                            PasswordHash = "28355A2D1A8636F26EBD23DB7F7BC58F319F8B4D85282DDD308CFC5EEB18031B",
                            Session = "IsThisWorking?"
                        },
                        new
                        {
                            Id = 2,
                            Email = "radek@example.com",
                            Login = "radek",
                            PasswordHash = "450A10FAD8BC1453CF4690E7391F34DF4E7C3621CCC7E1B45699190C6ACC36E4",
                            Session = "OtherSessionHash"
                        });
                });

            modelBuilder.Entity("BonsaiServer.Database.Mutation", b =>
                {
                    b.HasOne("BonsaiServer.Database.Plant", "Plant1")
                        .WithMany()
                        .HasForeignKey("Plant1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BonsaiServer.Database.Plant", "Plant2")
                        .WithMany()
                        .HasForeignKey("Plant2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BonsaiServer.Database.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("BonsaiServer.Database.Plant", b =>
                {
                    b.HasOne("BonsaiServer.Database.User", "User")
                        .WithMany("Plants")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
