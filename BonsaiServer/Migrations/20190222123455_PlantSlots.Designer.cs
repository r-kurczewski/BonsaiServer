// <auto-generated />
using System;
using BonsaiServer.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BonsaiServer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190222123455_PlantSlots")]
    partial class PlantSlots
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BonsaiServer.Database.Mutation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("End");

                    b.Property<int>("Plant1Id");

                    b.Property<int>("Plant2Id");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("Plant1Id");

                    b.HasIndex("Plant2Id");

                    b.HasIndex("UserId");

                    b.ToTable("Mutations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            End = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Plant1Id = 1,
                            Plant2Id = 2,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("BonsaiServer.Database.Plant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FlowersColorString")
                        .HasColumnName("FlowersColor")
                        .HasMaxLength(3);

                    b.Property<byte>("FlowersId");

                    b.Property<string>("LeavesColorString")
                        .HasColumnName("LeavesColor")
                        .HasMaxLength(3);

                    b.Property<byte>("LeavesId");

                    b.Property<string>("Name")
                        .HasMaxLength(20);

                    b.Property<string>("PotColorString")
                        .HasColumnName("PotColor")
                        .HasMaxLength(3);

                    b.Property<byte>("Rarity");

                    b.Property<byte>("Slot");

                    b.Property<string>("SoilColorString")
                        .HasColumnName("SoilColor")
                        .HasMaxLength(3);

                    b.Property<string>("StalkColorString")
                        .HasColumnName("StalkColor")
                        .HasMaxLength(3);

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Plants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FlowersColorString = "5bb",
                            FlowersId = (byte)1,
                            LeavesColorString = "3f3",
                            LeavesId = (byte)1,
                            Name = "FQJHOC",
                            PotColorString = "31f",
                            Rarity = (byte)0,
                            Slot = (byte)0,
                            SoilColorString = "119",
                            StalkColorString = "135",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            FlowersColorString = "793",
                            FlowersId = (byte)1,
                            LeavesColorString = "db5",
                            LeavesId = (byte)1,
                            Name = "TLHIVVCZF",
                            PotColorString = "19f",
                            Rarity = (byte)1,
                            Slot = (byte)1,
                            SoilColorString = "f9b",
                            StalkColorString = "59d",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            FlowersColorString = "151",
                            FlowersId = (byte)1,
                            LeavesColorString = "553",
                            LeavesId = (byte)1,
                            Name = "EVXBJFCNX",
                            PotColorString = "ff3",
                            Rarity = (byte)2,
                            Slot = (byte)2,
                            SoilColorString = "9d3",
                            StalkColorString = "775",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            FlowersColorString = "b3d",
                            FlowersId = (byte)1,
                            LeavesColorString = "9f7",
                            LeavesId = (byte)1,
                            Name = "NWUWD",
                            PotColorString = "b79",
                            Rarity = (byte)2,
                            Slot = (byte)3,
                            SoilColorString = "b75",
                            StalkColorString = "b95",
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            FlowersColorString = "751",
                            FlowersId = (byte)1,
                            LeavesColorString = "fb7",
                            LeavesId = (byte)1,
                            Name = "RNJRRYDFQ",
                            PotColorString = "9d3",
                            Rarity = (byte)0,
                            Slot = (byte)4,
                            SoilColorString = "135",
                            StalkColorString = "391",
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            FlowersColorString = "d75",
                            FlowersId = (byte)1,
                            LeavesColorString = "7d3",
                            LeavesId = (byte)1,
                            Name = "MZPPF",
                            PotColorString = "3db",
                            Rarity = (byte)4,
                            Slot = (byte)0,
                            SoilColorString = "b97",
                            StalkColorString = "957",
                            UserId = 2
                        },
                        new
                        {
                            Id = 7,
                            FlowersColorString = "79f",
                            FlowersId = (byte)1,
                            LeavesColorString = "7d9",
                            LeavesId = (byte)1,
                            Name = "ZKXMKDVLHT",
                            PotColorString = "1bf",
                            Rarity = (byte)3,
                            Slot = (byte)1,
                            SoilColorString = "7b3",
                            StalkColorString = "55f",
                            UserId = 2
                        },
                        new
                        {
                            Id = 8,
                            FlowersColorString = "9bd",
                            FlowersId = (byte)1,
                            LeavesColorString = "9f7",
                            LeavesId = (byte)1,
                            Name = "ZEXRLEFDP",
                            PotColorString = "b17",
                            Rarity = (byte)5,
                            Slot = (byte)2,
                            SoilColorString = "975",
                            StalkColorString = "15b",
                            UserId = 2
                        },
                        new
                        {
                            Id = 9,
                            FlowersColorString = "5b9",
                            FlowersId = (byte)1,
                            LeavesColorString = "f7f",
                            LeavesId = (byte)1,
                            Name = "OAFSSLGSC",
                            PotColorString = "395",
                            Rarity = (byte)0,
                            Slot = (byte)3,
                            SoilColorString = "ff3",
                            StalkColorString = "7d5",
                            UserId = 2
                        },
                        new
                        {
                            Id = 10,
                            FlowersColorString = "3b9",
                            FlowersId = (byte)1,
                            LeavesColorString = "71f",
                            LeavesId = (byte)1,
                            Name = "IXTWJYQFORY",
                            PotColorString = "fd1",
                            Rarity = (byte)4,
                            Slot = (byte)4,
                            SoilColorString = "1d5",
                            StalkColorString = "9d1",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("BonsaiServer.Database.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasMaxLength(32);

                    b.Property<string>("Login")
                        .HasMaxLength(16);

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(64);

                    b.Property<string>("Session")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "abc@wp.pl",
                            Login = "a",
                            PasswordHash = "28355a2d1a8636f26ebd23db7f7bc58f319f8b4d85282ddd308cfc5eeb18031b",
                            Session = "c8f0cbf67674c562415f802542e9e384ca056af3b8f2756acbfa7b0cfeeb6a95"
                        },
                        new
                        {
                            Id = 2,
                            Email = "radek@example.com",
                            Login = "radek",
                            PasswordHash = "450A10FAD8BC1453CF4690E7391F34DF4E7C3621CCC7E1B45699190C6ACC36E4",
                            Session = "450a10fad8bc1453cf4690e7391f34df4e7c3621ccc7e1b45699190c6acc36e4"
                        });
                });

            modelBuilder.Entity("BonsaiServer.Database.Mutation", b =>
                {
                    b.HasOne("BonsaiServer.Database.Plant", "Plant1")
                        .WithMany()
                        .HasForeignKey("Plant1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BonsaiServer.Database.Plant", "Plant2")
                        .WithMany()
                        .HasForeignKey("Plant2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BonsaiServer.Database.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("BonsaiServer.Database.Plant", b =>
                {
                    b.HasOne("BonsaiServer.Database.User", "User")
                        .WithMany("Plants")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
